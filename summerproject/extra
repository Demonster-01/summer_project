//////// login logic modify/////////////


# AUTHENTICATION_BACKENDS = [
#     'users.backends.CustomAuthenticationBackend',  # Replace 'yourapp' with your app name
#     'django.contrib.auth.backends.ModelBackend',  # Keep the default ModelBackend
# ]


# from django.contrib.auth.backends import ModelBackend
# from django.contrib.auth import get_user_model
# from django.core.exceptions import ObjectDoesNotExist
# from .models import Profile
# import logging
# User = get_user_model()
#
#
# class CustomAuthenticationBackend(ModelBackend):
#     def authenticate(self, request, username=None, password=None, **kwargs):
#         try:
#             print("login start")
#             user = User.objects.get(username=username)
#             profile = Profile.objects.get(user=user)
#             # Check if the user's profile is approved (case-insensitive)
#             if profile.is_approved == 'True' and user.check_password(password):
#                 logging.debug(f'User: {user.username}, is_approved: {profile.is_approved}')
#                 print("login successsss")
#                 return user
#         except ObjectDoesNotExist:
#             pass  # Handle ObjectDoesNotExist exception (user or profile not found)
#         except Exception as e:
#             logging.error(f"An error occurred: {str(e)}")
#
#         return print("stop")
